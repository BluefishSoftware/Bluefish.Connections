@inherits SettingsBase<SqlServerConnection>

<div class="@CssClass">
    <label class="form-label">Server</label>
    <InputText ValueExpression="@(() => _connection.Server)"
               Value="@_connection.Server"
               ValueChanged="(v) => OnValueChanged(x => x.Server, v)"
               class="form-control form-control-sm"
               disabled="@(!CanEdit)" />
    <ValidationMessage For="() => _connection.Server" />
</div>

<div class="@CssClass">
    <label class="form-label">Port</label>
    <InputNumber TValue="int"
                 ValueExpression="@(() => _connection.Port)"
                 Value="@_connection.Port"
                 ValueChanged="(v) => OnValueChanged(x => x.Port, v)"
                 class="form-control form-control-sm"
                 disabled="@(!CanEdit)" />
    <ValidationMessage For="() => _connection.Port" />
</div>

<div class="@CssClass">
    <label class="form-label">Database</label>
    <InputText ValueExpression="@(() => _connection.Database)"
               Value="@_connection.Database"
               ValueChanged="(v) => OnValueChanged(x => x.Database, v)"
               class="form-control form-control-sm"
               disabled="@(!CanEdit)" />
    <ValidationMessage For="() => _connection.Database" />
</div>

<div class="@CssClass">
    <BfSwitch Text="Windows Authentication"
              TValue="bool"
              Value="_connection.UseWindowsAuthentication"
              ValueChanged="(v) => OnValueChanged(x => x.UseWindowsAuthentication, v)" />
    <ValidationMessage For="() => _connection.UseWindowsAuthentication" />
</div>

@if (!_connection.UseWindowsAuthentication)
{
    <div class="@CssClass">
        <label class="form-label">User Id</label>
        <InputText ValueExpression="@(() => _connection.UserId)"
               Value="@_connection.UserId"
               ValueChanged="(v) => OnValueChanged(x => x.UserId, v)"
               class="form-control form-control-sm"
               disabled="@(!CanEdit)" />
        <ValidationMessage For="() => _connection.UserId" />
    </div>

    <div class="@CssClass">
        <label class="form-label">Password</label>
        <InputText ValueExpression="@(() => _connection.Password)"
               Value="@_connection.Password"
               ValueChanged="(v) => OnValueChanged(x => x.Password, v)"
               class="form-control form-control-sm"
               type="password"
               disabled="@(!CanEdit)" />
        <ValidationMessage For="() => _connection.Password" />
    </div>
}

<div class="@CssClass">
    <label class="form-label">Connection Timeout</label>
    <InputNumber TValue="int"
                 ValueExpression="@(() => _connection.ConnectionTimeout)"
                 Value="@_connection.ConnectionTimeout"
                 ValueChanged="(v) => OnValueChanged(x => x.ConnectionTimeout, v)"
                 class="form-control form-control-sm"
                 disabled="@(!CanEdit)" />
    <ValidationMessage For="() => _connection.ConnectionTimeout" />
</div>

<div class="@CssClass">
    <label class="form-label">Extra</label>
    <InputText ValueExpression="@(() => _connection.Extra)"
               Value="@_connection.Extra"
               ValueChanged="(v) => OnValueChanged(x => x.Extra, v)"
               class="form-control form-control-sm"
               disabled="@(!CanEdit)" />
    <ValidationMessage For="() => _connection.Extra" />
</div>