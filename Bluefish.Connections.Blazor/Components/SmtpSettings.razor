@inherits SettingsBase<SmtpConnection>

<div class="@CssClass">
    <label class="form-label">Server</label>
    <InputText ValueExpression="@(() => _connection.Server)"
               Value="@_connection.Server"
               ValueChanged="(v) => OnValueChanged(x => x.Server, v)"
               class="form-control form-control-sm"
               disabled="@(!CanEdit)" />
    <div class="form-text">Name or IP address of SMTP Server.</div>
    <ValidationMessage For="() => _connection.Server" />
</div>

<div class="@CssClass">
    <label class="form-label">Port</label>
    <InputNumber TValue="int"
                 ValueExpression="@(() => _connection.Port)"
                 Value="@_connection.Port"
                 ValueChanged="(v) => OnValueChanged(x => x.Port, v)"
                 class="form-control form-control-sm"
                 min="0"
                 max="65535"
                 disabled="@(!CanEdit)" />
    <div class="form-text">Port number to connect to on server.</div>
    <ValidationMessage For="() => _connection.Port" />
</div>

<div class="@CssClass">
    <BfSwitch Text="Enable SSL"
              TValue="bool"
              Value="_connection.EnableSsl"
              ValueChanged="(v) => OnValueChanged(x => x.EnableSsl, v)" />
    <ValidationMessage For="() => _connection.EnableSsl" />
</div>

<div class="@CssClass">
    <label class="form-label">Username</label>
    <InputText ValueExpression="@(() => _connection.Username)"
               Value="@_connection.Username"
               ValueChanged="(v) => OnValueChanged(x => x.Username, v)"
               class="form-control form-control-sm"
               disabled="@(!CanEdit)" />
    <div class="form-text">Username of account to connect with.</div>
    <ValidationMessage For="() => _connection.Username" />
</div>

<div class="@CssClass">
    <label class="form-label">Password</label>
    <InputText ValueExpression="@(() => _connection.Password)"
               Value="@_connection.Password"
               ValueChanged="(v) => OnValueChanged(x => x.Password, v)"
               class="form-control form-control-sm"
               type="password"
               disabled="@(!CanEdit)" />
    <div class="form-text">Password of account to connect with.</div>
    <ValidationMessage For="() => _connection.Password" />
</div>